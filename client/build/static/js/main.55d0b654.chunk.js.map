{"version":3,"sources":["reportWebVitals.js","Assets/rs.png","Components/MailTemplate/error.jsx","apiConfig.js","Components/Dashboard/dashboard.jsx","Components/Layout/Header.js","Components/Layout/SideMenu.js","Components/Layout/Footer.js","Components/Layout/index.js","App.js","Components/Candidate/candidate.jsx","Components/Member/member.jsx","Store/reducers/reducer.js","Store/store/store.js","index.js","Components/Login/login.jsx","Components/MailTemplate/success.jsx","Components/MailTemplate/nomatch.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Paragraph","Typography","Text","http","axios","create","baseURL","headers","interceptors","request","use","config","a","err","Promise","reject","Dashboard","useState","data","setData","Candi","setCandiData","TotalCandiatdate","setTotalCandiatdate","useEffect","approvedlist","get","response","catch","error","console","log","forEach","element","status","push","Container","fluid","className","style","padding","minHeight","Row","textAlign","Card","bg","border","text","Header","Body","Title","length","Footer","props","menu","to","Item","Col","color","fontWeight","overlay","placement","icon","UserOutlined","Sider","Layout","App","collapsed","setCollapsed","location","useLocation","collapsible","onCollapse","theme","mode","defaultSelectedKeys","pathname","PieChartOutlined","DatabaseOutlined","Content","LayoutWithRoute","children","SideMenu","margin","Component","component","render","routeProps","Subject","loading","setloading","modalShow","setModalShow","seldata","setseldata","useForm","register","handleSubmit","reset","onSubmit","email","cnic","name","fname","phone","edu","staus","constituency","count","nominatedBy","onUpdate","put","_id","res","getData","sort","b","parseInt","EditModal","center","justifyContent","Modal","size","aria-labelledby","backdrop","keyboard","centered","id","fontSize","lg","md","sm","Form","Group","controlId","Label","Control","placeholder","readOnly","backgroundColor","charAt","toUpperCase","slice","as","value","Button","background","type","onClick","onHide","cancel","e","message","spinning","tip","Table","verticalAlign","cursor","striped","table-success","bordered","hover","responsive","map","item","i","variant","title","onConfirm","delete","success","onCancel","okText","cancelText","show","Account","finaldata","setfinaldata","control","password","Ribbon","voteFlag","LikeTwoTone","twoToneColor","DislikeTwoTone","UserData","AllSubjects","reducers","combineReducers","SetUser","state","action","SelectedUser","payload","Subjects","store","createStore","ReactDOM","exact","path","history","useHistory","errors","formState","errormsg","marginLeft","src","logo","alt","borderRadius","required","url","match","dashboard","member","candidate","subTitle","extra","strong","CloseCircleOutlined","href","document","getElementById"],"mappings":"iOAYeA,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2DCPC,G,OAAA,IAA0B,gC,2DCKjCQ,EAAoBC,IAApBD,UAAWE,EAASD,IAATC,K,8CCHbC,E,OAAOC,EAAMC,OAAO,CACvBC,QAAS,2CAEVC,QAAS,CAAC,eAAgB,sBAG5BJ,EAAKK,aAAaC,QAAQC,IAA1B,uCACE,WAAMC,GAAN,SAAAC,EAAA,6DAAkBD,EAAOJ,QAAU,GAAnC,kBAA+CI,GAA/C,2CADF,uDAEE,SAAAE,GAAS,OAAOC,QAAQC,OAAOF,MAGlBV,Q,yBCTA,SAASa,IAEtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgDJ,mBAAS,IAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAsCA,OArCAC,qBAAU,WAEV,IAaEC,EAAe,GAVftB,EAAKuB,IADY,oBACE,CAAEnB,QAFL,CAAE,eAAgB,sBAG/Bb,MAAK,SAACiC,GACLR,EAAQ,CACND,KAAMS,EAAST,UAGlBU,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAOhB1B,EAAKuB,IADY,4BACE,CAAEnB,QAFL,CAAE,eAAgB,sBAG/Bb,MAAK,SAACiC,GACLA,EAAST,KAAKc,SAAQ,SAAAC,GACE,aAAnBA,EAAQC,QACTT,EAAaU,KAAKF,MAGtBZ,EAAaI,GACbF,EAAqBI,EAAST,SAE/BU,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAKf,IAGD,cAACO,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,kCACE,sBACEC,UAAU,yBACVC,MAAO,CAAEC,QAAS,GAAIC,UAAW,KAFnC,UAII,cAACC,EAAA,EAAD,UACE,8CAEJ,eAACA,EAAA,EAAD,CAAKH,MAAO,CAACI,UAAU,UAAvB,UACE,qBAAKL,UAAU,oBAAf,SACE,eAACM,EAAA,EAAD,CAAMC,GAAG,UAAUC,OAAO,UAAUC,KAAK,QAAQT,UAAU,OAA3D,UACE,cAACM,EAAA,EAAKI,OAAN,4BACA,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAahC,EAAKA,KAAOA,EAAKA,KAAKiC,OAAS,IAC5C,cAACP,EAAA,EAAK1C,KAAN,qCAEF,cAAC0C,EAAA,EAAKQ,OAAN,6BAGJ,qBAAKd,UAAU,oBAAf,SACE,eAACM,EAAA,EAAD,CAAMC,GAAG,QAAQC,OAAO,QAAQC,KAAK,OAAOT,UAAU,OAAtD,UACE,cAACM,EAAA,EAAKI,OAAN,+BACA,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAa5B,EAAmBA,EAAiB6B,OAAS,IAC1D,cAACP,EAAA,EAAK1C,KAAN,sCAEF,cAAC0C,EAAA,EAAKQ,OAAN,6BAGJ,qBAAKd,UAAU,oBAAf,SACE,eAACM,EAAA,EAAD,CAAMC,GAAG,OAAOC,OAAO,OAAOC,KAAK,QAAQT,UAAU,OAArD,UACE,cAACM,EAAA,EAAKI,OAAN,kCACA,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAa9B,EAAQA,EAAM+B,OAAS,IACpC,cAACP,EAAA,EAAK1C,KAAN,8CAEF,cAAC0C,EAAA,EAAKQ,OAAN,uC,iDCpDDJ,MA1Bf,SAAgBK,GACd,IAAMC,EACJ,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,GAAG,IAAT,UACA,cAAC,IAAKC,KAAN,6BAAe,KACf,cAAC,IAAKA,KAAN,oBAAe,UAInB,OACI,cAAC,IAAOR,OAAR,CAAeV,UAAU,yBAAzB,SACE,eAACI,EAAA,EAAD,WACE,cAACe,EAAA,EAAD,UAAK,sBAAMlB,MAAO,CAACmB,MAAM,QAASC,WAAW,QAAxC,qCACL,cAACF,EAAA,EAAD,CAAKnB,UAAU,WAAf,SACE,cAAC,IAAD,CAAUsB,QAASN,EAAMO,UAAU,eAAnC,SACE,cAAC,IAAD,CACAvB,UAAU,yBACRwB,KAAM,cAACC,EAAA,EAAD,gB,kBCbdC,EAAUC,IAAVD,MAoCOE,EAlCH,WACV,MAAkCjD,oBAAS,GAA3C,mBAAOkD,EAAP,KAAkBC,EAAlB,KACMC,EAAWC,cAGjB,OACE,eAACN,EAAD,CAAOO,aAAW,EAACJ,UAAWA,EAAWK,WAFxB,SAACL,GAAD,OAAeC,EAAaD,IAE7C,UACE,qBAAK7B,UAAU,SACf,eAAC,IAAD,CACEmC,MAAM,OACNC,KAAK,SACLC,oBAAqB,CAACN,EAASO,UAHjC,UAKE,eAAC,IAAKpB,KAAN,CAA4BM,KAAM,cAACe,EAAA,EAAD,IAAlC,UACE,6CACA,cAAC,IAAD,CAAMtB,GAAG,WAFI,cAIf,eAAC,IAAKC,KAAN,CAAyBM,KAAM,cAACgB,EAAA,EAAD,IAA/B,UACE,0CACA,cAAC,IAAD,CAAMvB,GAAG,kBAFI,WAIf,eAAC,IAAKC,KAAN,CAA4BM,KAAM,cAACC,EAAA,EAAD,IAAlC,UACE,6CACA,cAAC,IAAD,CAAMR,GAAG,qBAFI,qBCvBRH,EANA,WACb,OACE,cAAC,IAAOA,OAAR,CAAeb,MAAO,CAAEI,UAAW,SAASe,MAAM,UAAWC,WAAW,QAAxE,iECAIoB,EAAYd,IAAZc,QAeOC,EAbS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,eAAC,IAAD,CAAQ1C,MAAO,CAAEE,UAAW,SAA5B,UACE,cAACyC,EAAD,IACA,eAAC,IAAD,CAAQ5C,UAAU,cAAlB,UACE,cAAC,EAAD,eAAY2C,IACZ,cAACF,EAAD,CAASxC,MAAO,CAAE4C,OAAQ,WAA1B,SAAwCF,IACxC,cAAC,EAAD,W,OCVO,SAASf,EAAT,GAAwC,IAAdkB,EAAa,EAAxBC,UAC5B,OACE,cAAC,IAAD,CACEC,OAAQ,SAACC,GAAD,OACN,cAACtB,EAAD,UACE,cAACmB,EAAD,eAAeG,S,uEC2PVC,MArPf,WACE,MAA8BvE,oBAAS,GAAvC,mBAAOwE,EAAP,KAAgBC,EAAhB,KACA,EAAkCzE,oBAAS,GAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAAwB3E,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAO4E,EAAP,KAAgBC,EAAhB,KACA,EAAyCC,cAAjCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAaC,EAA/B,EAA+BA,MACzBC,EAAW,SAACjF,GACI,KAAfA,EAAKkF,QAAclF,EAAKkF,MAAQP,EAAQO,OAC1B,KAAdlF,EAAKmF,OAAanF,EAAKmF,KAAOR,EAAQQ,MACxB,KAAdnF,EAAKoF,OAAapF,EAAKoF,KAAOT,EAAQS,MACvB,KAAfpF,EAAKqF,QAAcrF,EAAKqF,MAAQV,EAAQU,OACzB,KAAfrF,EAAKsF,QAActF,EAAKsF,MAAQX,EAAQW,OAC3B,KAAbtF,EAAKuF,MAAYvF,EAAKuF,IAAMZ,EAAQY,KACpB,KAAhBvF,EAAKgB,SAAehB,EAAKgB,OAAS2D,EAAQa,OACpB,KAAtBxF,EAAKyF,eAAqBzF,EAAKyF,aAAed,EAAQc,cACvC,KAAfzF,EAAK0F,QAAc1F,EAAK0F,MAAQf,EAAQe,OAC3C1F,EAAK2F,YAAchB,EAAQgB,YAE3BC,EAAS5F,GACTgF,IACAN,GAAa,IAGXkB,EAAW,SAAC5F,GAChBY,QAAQC,IAAIb,GACVf,EAAK4G,IAAI,gCAAkClB,EAAQmB,IAAK9F,GACvDxB,MAAK,SAACuH,GACLnF,QAAQC,IAAI,oBAAsBkF,GAClCC,OACCtF,OAAM,SAACC,GACRC,QAAQC,IAAIF,OAIlBL,qBAAU,WACR0F,MACC,IAEH,IAAMA,EAAU,WACdxB,GAAW,GAGXvF,EAAKuB,IADY,4BACE,CAAEnB,QAFL,CAAE,eAAgB,sBAG/Bb,MAAK,SAACiC,GAAc,IAAD,EAClB+D,GAAW,GACX,UAAA/D,EAAST,YAAT,SAAeiG,MAAK,SAACvG,EAAGwG,GAAJ,OAAWC,SAASzG,EAAEgG,OAASS,SAAUD,EAAER,QAAU,EAAI,KAC7EzF,EAAQ,CACND,KAAMS,EAAST,UAGlBU,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAMlB,SAASyF,EAAUjE,GACjB,IAAMkE,EAAS,CACbC,eAAe,qBAEjB,OACE,eAACC,EAAA,EAAD,2BACMpE,GADN,IAEEqE,KAAK,KACLC,kBAAgB,iBAChBC,SAAS,SACTC,UAAU,EACVC,UAAQ,EANV,UAQI,cAACL,EAAA,EAAMzE,OAAP,CAAcT,MAAOgF,EAArB,SACE,eAACE,EAAA,EAAMvE,MAAP,CAAaX,MAAOgF,EAAQQ,GAAG,YAA/B,6BAA4D,oBAAIxF,MAAO,CAACyF,SAAU,GAAGtE,MAAM,OAA/B,6DAEhE,uBAAMyC,SAAUF,EAAaE,GAA7B,UACE,cAACsB,EAAA,EAAMxE,KAAP,UACE,eAACP,EAAA,EAAD,WACE,eAACe,EAAA,EAAD,CAAKwE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACD,eAACC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,WAAvC,UACC,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,aAAeC,YAAa5C,EAAQS,MAAUN,EAAS,aAEzD,eAACoC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,YAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,sBACA,cAACH,EAAA,EAAKI,QAAN,aAAeC,YAAa5C,EAAQW,OAAWR,EAAS,cAE1D,eAACoC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,gBAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,aAAeC,YAAa5C,EAAQY,KAAST,EAAS,YAExD,eAACoC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,YAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,aAAcC,YAAa5C,EAAQe,MAAO8B,UAAQ,GAAK1C,EAAS,cAElE,eAACoC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,YAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,2BACA,cAACH,EAAA,EAAKI,QAAN,aAAcC,YAAa5C,EAAQc,cAAkBX,EAAS,wBAG9D,eAACvC,EAAA,EAAD,CAAKwE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,UACA,eAACC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,iBAAvC,UACA,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,aAAeC,YAAa5C,EAAQU,OAAWP,EAAS,cAE1D,eAACoC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,YAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,aAAeC,YAAa5C,EAAQO,OAAWJ,EAAS,cAE1D,eAACoC,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,WAAvC,UACE,cAACF,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,aAAeC,YAAa5C,EAAQQ,MAAUL,EAAS,aAEzD,eAACoC,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAAtB,UACJ,cAACF,EAAA,EAAKG,MAAN,+BADI,IACsC,cAAC,IAAD,CAAQhG,MAAO,CAAEoG,gBAAoC,aAAnB9C,EAAQ3D,OAAyB,UAAW,OAAQ0E,MAAOf,EAAQ3D,OAAS2D,EAAQ3D,OAAO0G,OAAO,GAAGC,cAAgBhD,EAAQ3D,OAAO4G,MAAM,GAAK,KAC3N,eAACV,EAAA,EAAKI,QAAN,yBAAcO,GAAG,SAASN,YAAa5C,EAAQ3D,QAAY8D,EAAS,WAApE,cACA,wBAAQgD,MAAM,GAAd,2BACE,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,qCAMA,eAACvB,EAAA,EAAMrE,OAAP,CAAcb,MAAO,CAACiF,eAAc,UAApC,UACE,cAACyB,EAAA,EAAD,CAAQ1G,MAAO,CAAC2G,WAAW,UAAUpG,OAAO,WAAaqG,KAAK,SAA9D,oBACA,cAACF,EAAA,EAAD,CAAQ1G,MAAO,CAAC2G,WAAW,UAAUpG,OAAO,WAAasG,QAAS/F,EAAMgG,OAAxE,6BAoBV,SAASC,EAAOC,GACdC,IAAQ3H,MAAM,yBAQhB,OACE,cAACO,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACG,cAAC,IAAD,CAAMoH,SAAUhE,EAAUiE,IAAI,sBAAsBhC,KAAK,QAAzD,SACD,kCACE,sBACEpF,UAAU,yBACVC,MAAO,CAAEC,QAAS,GAAIC,UAAW,KAFnC,UAIE,yBAASH,UAAU,OAAnB,SACE,cAACI,EAAA,EAAD,UACE,iDAGJ,kCACGxB,EAAKA,KACJ,eAACyI,EAAA,EAAD,CACEpH,MArBC,CACbI,UAAU,SACViH,cAAc,SACdC,OAAO,WAmBKC,SAAO,EACPC,gBAAc,OACdC,UAAQ,EACRC,OAAK,EACLvC,KAAK,KACLwC,YAAU,EAPZ,UASE,gCACE,+BACE,mCACA,sCACA,6CACA,sCACA,sCACA,uCACA,sCACA,6CAGJ,gCACGhJ,EAAKA,KAAKiJ,KAAI,SAAUC,EAAMC,GAC7B,OACE,+BACE,6BAAKA,EAAE,IACP,6BAAKD,EAAK9D,OACV,6BAAK8D,EAAK7D,QACV,6BAAK6D,EAAK/D,OACV,6BAAK+D,EAAKxD,QACV,6BAAKwD,EAAK5D,QACV,6BACE,cAACyC,EAAA,EAAD,CACEqB,QAAQ,kBACR5C,KAAK,KACL0B,QAAS,WACPxD,GAAa,GACbE,EAAWsE,IALf,oBAWF,6BACE,cAAC,IAAD,CACEG,MAAM,yCACNC,UAAW,kBApFpBjB,EAoFkCa,OAnFjDjK,EACGsK,OAAO,gCAAkClB,EAAEvC,KAC3CtH,MAAK,SAACuH,GACLuC,IAAQkB,QAAQ,0BAChBxD,OAEDtF,OAAM,SAACC,GACN2H,IAAQ3H,MAAMA,EAAM2H,SACpB1H,QAAQC,IAAIF,MATlB,IAAiB0H,GAqFSoB,SAAUrB,EACVsB,OAAO,MACPC,WAAW,KALb,SAOE,cAAC5B,EAAA,EAAD,CAAQqB,QAAQ,iBAAiB5C,KAAK,KAAtC,0BA3BG2C,QAoCf,cAAC/C,EAAD,CACEwD,KAAMnF,EACN0D,OAAQ,kBAAMzD,GAAa,SAI/B,cAAC,IAAD,gB,oBCNCmF,OAnOf,WAEE,MAA8B9J,oBAAS,GAAvC,mBAAOwE,EAAP,KAAgBC,EAAhB,KACA,EAAkCzE,oBAAS,GAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KACA,EAA8B3E,mBAAS,IAAvC,mBAAO4E,EAAP,KAAgBC,EAAhB,KACA,EAAkC7E,qBAAlC,mBAAO+J,EAAP,KAAkBC,EAAlB,KACA,EAAmDlF,cAA3CmF,EAAR,EAAQA,QAASlF,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,MACnCC,EAAW,SAACjF,GACG,KAAfA,EAAKkF,QAAclF,EAAKkF,MAAQP,EAAQO,OACtB,KAAlBlF,EAAKiK,WAAiBjK,EAAKiK,SAAWtF,EAAQsF,UAClDvF,GAAa,GACbkB,EAAS5F,GACTgF,KAGIY,EAAW,SAAC5F,GAChBf,EACG4G,IAAI,wBAA0BlB,EAAQmB,IAAK9F,GAC3CxB,MAAK,SAACuH,GACLnF,QAAQC,IAAI,2BAA6BkF,GACzCnF,QAAQC,IAAIiE,GACZkB,OAEDtF,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAIlBL,qBAAU,WACR0F,MACC,IAEH,IAAMA,EAAU,WACdxB,GAAW,GAGXvF,EACGuB,IAFc,oBAEA,CAAEnB,QAHH,CAAE,eAAgB,sBAI/Bb,MAAK,SAACiC,GACL+D,GAAW,GACXuF,EAAatJ,EAAST,SAEvBU,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAIlB,SAASyF,EAAUjE,GACjB,OACE,eAACoE,EAAA,EAAD,2BACMpE,GADN,IAEEqE,KAAK,KACLC,kBAAgB,iBAChBC,SAAS,SACTC,UAAU,EACVC,UAAQ,EANV,UAQE,cAAC,IAAMsD,OAAP,CACE1H,MAAM,UACNX,KAAM8C,EAAQO,MAAQ,IAAMP,EAAQsF,SAFtC,SAIE,cAAC1D,EAAA,EAAMzE,OAAP,UACE,eAACyE,EAAA,EAAMvE,MAAP,CAAa6E,GAAG,YAAhB,2BACiB,IACf,oBAAIxF,MAAO,CAAEyF,SAAU,GAAItE,MAAM,OAAjC,+DAMN,uBAAMyC,SAAUF,EAAaE,GAA7B,UACE,eAACsB,EAAA,EAAMxE,KAAP,WACE,cAACP,EAAA,EAAD,UACE,cAACe,EAAA,EAAD,CAAKwE,GAAI,GAAIE,GAAI,GAAI7F,UAAU,OAA/B,SACE,cAAC8F,EAAA,EAAKI,QAAN,aACEC,YAAa5C,EAAQO,MACrB+C,KAAK,QACDnD,EAAS,eAInB,cAACtD,EAAA,EAAD,UACE,cAACe,EAAA,EAAD,CAAKwE,GAAI,GAAIE,GAAI,GAAI7F,UAAU,OAA/B,SACE,cAAC8F,EAAA,EAAKI,QAAN,aACEC,YAAa5C,EAAQsF,SACrBhC,KAAK,QACDnD,EAAS,qBAKrB,eAACyB,EAAA,EAAMrE,OAAP,CAAcb,MAAO,CAAEiF,eAAe,UAAtC,UACE,cAACyB,EAAA,EAAD,CACE1G,MAAO,CAAE2G,WAAW,UAAYpG,OAAO,WACvCqG,KAAK,SAFP,oBAMA,cAACF,EAAA,EAAD,CACE1G,MAAO,CAAE2G,WAAW,UAAYpG,OAAO,WACvCsG,QAAS/F,EAAMgG,OAFjB,6BAwBV,SAASC,EAAOC,GACdzH,QAAQC,IAAIwH,GACZC,IAAQ3H,MAAM,eAShB,OACE,cAACO,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAAC,IAAD,CAAMoH,SAAUhE,EAASiE,IAAI,sBAAsBhC,KAAK,QAAxD,SACE,kCACE,sBACEpF,UAAU,yBACVC,MAAO,CAAEC,QAAS,GAAIC,UAAW,KAFnC,UAIE,yBAASH,UAAU,OAAnB,SACE,cAACI,EAAA,EAAD,UACE,8CAGJ,kCACGsI,EACC,eAACrB,EAAA,EAAD,CAAOpH,MArBN,CACbI,UAAU,SACViH,cAAc,SACdC,OAAO,WAkB2BC,SAAO,EAACC,gBAAc,OAAOC,UAAQ,EAACC,OAAK,EAACvC,KAAK,KAAKwC,YAAU,EAAtF,UACE,gCACE,+BACE,mCACA,yCACA,0CACA,uCACA,8CACA,sCACA,6CAGJ,gCACGc,EAAUb,KAAI,SAAUC,EAAMC,GAC7B,OACE,+BACE,6BAAKA,EAAI,IACT,6BAAKD,EAAKhE,QACV,6BAAKgE,EAAKe,WACV,+BAAKf,EAAKzD,aAAV,OACA,8BACqB,IAAlByD,EAAKiB,SACJ,cAACC,GAAA,EAAD,CACEC,aAAa,QACbhJ,MAAO,CAAEyF,SAAU,MAGrB,cAACwD,GAAA,EAAD,CACED,aAAa,MACbhJ,MAAO,CAAEyF,SAAU,QAIzB,6BACE,cAACiB,EAAA,EAAD,CACEqB,QAAQ,kBACR5C,KAAK,KACL0B,QAAS,WACPxD,GAAa,GACbE,EAAWsE,IALf,oBAWF,6BACE,cAAC,IAAD,CACEG,MAAM,uCACNC,UAAW,kBAtFtBjB,EAsFoCa,EArFnDjK,EACGsK,OAAO,wBAA0BlB,EAAEvC,KACnCtH,MAAK,SAACuH,GACLC,OAEDtF,OAAM,SAACC,GACNC,QAAQC,IAAIF,WAEhB2H,IAAQkB,QAAQ,0BATlB,IAAiBnB,GAuFWoB,SAAUrB,EACVsB,OAAO,MACPC,WAAW,KALb,SAOE,cAAC5B,EAAA,EAAD,CAAQqB,QAAQ,iBAAiB5C,KAAK,KAAtC,0BAtCG2C,QA+Cf,cAAC/C,EAAD,CACEpG,KAAM2E,EACNiF,KAAMnF,EACNuF,QAASA,EACT7B,OAAQ,kBAAMzD,GAAa,SAI/B,cAAC,IAAD,gB,wBC3OV6F,GAAW,GACXC,GAAc,GCCpB,IAAMC,GAAWC,aAAgB,CAAEC,QDEjC,WAA4C,IAA3BC,EAA0B,uDAAlBL,GAAUM,EAAQ,uCACzC,MAAoB,YAAhBA,EAAO5C,KACA,2BAAK2C,GAAZ,IAAmBE,aAAcD,EAAOE,UAE9BH,GCNyBI,SDSzC,WAAgD,IAA9BJ,EAA6B,uDAArBJ,GAAaK,EAAQ,uCAC7C,MAAoB,gBAAhBA,EAAO5C,KACA,2BAAK2C,GAAZ,IAAmBJ,YAAaK,EAAOE,UAE7BH,KCVHK,GADDC,aAAYT,ICc1BU,IAAS/G,OACP,cAAC,KAAD,CAAU6G,MAAOA,GAAjB,SACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAM,IAAKlH,UCdf,WA+Bb,IAAMmH,EAAUC,cAChB,EAII1G,cAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACayG,EAHf,EAGEC,UAAaD,OAUTE,EAAW,CACf5E,SAAS,OACTtE,MAAM,MACNmJ,WAAW,OACXlJ,WAAW,OAEb,OACE,yBAASrB,UAAU,eAAnB,SACE,eAACF,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,qBAAKC,UAAU,6BAAf,SACE,qBAAKA,UAAU,4BAAf,SACA,qBAAKwK,IAAKC,EAAMC,IAAI,aAGtB,qBAAK1K,UAAU,6BAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAd,8BACA,eAAC8F,EAAA,EAAD,CAAMjC,SAAUF,GA1BX,SAAC/E,GACG,oBAAfA,EAAKkF,OAAiD,UAAlBlF,EAAKiK,UAC3C3B,IAAQkB,QAAQ,yBAChB8B,EAAQrK,KAAK,SAEbqH,IAAQ3H,MAAM,kCAqBN,UACE,eAACuG,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,iBAAvC,UACE,cAACF,EAAA,EAAKI,QAAN,aACEW,KAAK,QACLV,YAAY,cACZlG,MAAO,CAAE0K,aAAa,SAClBjH,EAAS,QAAS,CAAEkH,UAAU,MAEpC,cAAC9E,EAAA,EAAKlI,KAAN,CACEoC,UAAU,aACVC,MAAO,CAAEsK,WAAW,QAFtB,4DAMCH,EAAOtG,OACN,sBAAM7D,MAAOqK,EAAb,uCAGJ,eAACxE,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAOgG,UAAU,oBAAvC,UACE,cAACF,EAAA,EAAKI,QAAN,aACEW,KAAK,WACLV,YAAY,WACZlG,MAAO,CAAE0K,aAAa,SAClBjH,EAAS,WAAY,CAAEkH,UAAU,MACpC,IACFR,EAAOvB,UACN,sBAAM5I,MAAOqK,EAAb,uCAGJ,cAACxE,EAAA,EAAKC,MAAN,CAAY/F,UAAU,OAAtB,SACE,cAAC2G,EAAA,EAAD,CACEqB,QAAQ,UACRhI,UAAU,2CACV6G,KAAK,SACL5G,MAAO,CAAE0K,aAAa,QAJxB,uCD9EZ,cAAC,IAAD,CACEV,KAAM,OACNjH,OAAQ,gBAAY6H,EAAZ,EAAGC,MAASD,IAAZ,OACN,eAAC,IAAD,WACE,cAAC,EAAD,CAAUb,OAAK,EAACC,KAAI,UAAKY,EAAL,KAAa9H,UAAWgI,IAC5C,cAAC,EAAD,CAAUf,OAAK,EAACC,KAAI,UAAKY,EAAL,WAAmB9H,UAAWiI,KAClD,cAAC,EAAD,CAAUhB,OAAK,EAACC,KAAI,UAAKY,EAAL,cAAsB9H,UAAWkI,UAI1D,cAAC,IAAD,CAAOjB,OAAK,EAACC,KAAM,WAAYlH,UE7BvB,WACb,IAAMmH,EAAUC,cAYhB,OACE,cAACrK,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,qBAAKE,MAbM,CACbC,QAAQ,SACR0G,WAAW,aAWT,SACE,cAAC,IAAD,CACEhH,OAAO,UACPqI,MAAM,qBACNiD,SAAS,aACTC,MAAO,CACL,cAAC,IAAD,CAAQtE,KAAK,UAAwBC,QAAS,WAVtDoD,EAAQrK,KAAK,MAUL,sBAA2B,WAG3B,cAAC,IAAD,CAAmBiH,QAAS,WAhBpCoD,EAAQrK,KAAK,cAgBL,uBAAY,kBFMjB,cAAC,IAAD,CAAOmK,OAAK,EAACC,KAAM,SAAUlH,UZ5BrB,WAEb,IAAMmH,EAAUC,cAQhB,OACE,cAACrK,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,qBAAKE,MATM,CACbC,QAAQ,SACR0G,WAAW,aAOT,SACE,cAAC,IAAD,CACEhH,OAAO,QACPqI,MAAM,oBACNiD,SAAS,yEACTC,MAAO,CAAC,cAAC,IAAD,CAAmBrE,QAAS,WAT1CoD,EAAQrK,KAAK,cASC,uBAAY,SAJtB,SAME,sBAAKG,UAAU,OAAf,UACE,cAACtC,EAAD,UACE,cAACE,EAAD,CACEwN,QAAM,EACNnL,MAAO,CACLyF,SAAU,IAHd,kEASF,eAAChI,EAAD,WACE,cAAC2N,EAAA,EAAD,CAAqBrL,UAAU,gCAAiC,IADlE,6BAE4B,mBAAGsL,KAAK,KAAR,iCAE5B,eAAC5N,EAAD,WACE,cAAC2N,EAAA,EAAD,CAAqBrL,UAAU,gCAAiC,IADlE,uCAEuC,IACrC,mBAAGsL,KAAK,KAAR,kDYRP,cAAC,IAAD,CAAOtB,OAAK,EAACC,KAAM,IAAKlH,UG/BhB,WACb,IAAMmH,EAAUC,cAShB,OACE,cAACrK,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,qBAAKE,MAVM,CACbC,QAAQ,QACR0G,WAAW,aAQT,SACA,cAAC,IAAD,CACFhH,OAAO,MACPqI,MAAM,MACNiD,SAAS,8CACTC,MAAO,cAAC,IAAD,CAAQtE,KAAK,UAAUC,QAVnB,WACXoD,EAAQrK,KAAK,cASN,uCHkBT0L,SAASC,eAAe,SAG1BvO,M","file":"static/js/main.55d0b654.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/rs.efadac92.png\";","import { React } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Result, Button, Typography } from \"antd\";\r\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { Paragraph, Text } = Typography;\r\n\r\nexport default function ErrorPage() {\r\n\r\n  const history = useHistory();\r\n  const Middle = {\r\n    padding: `13em 0`,\r\n    background: `aliceblue`\r\n  };\r\n  const back = () => {\r\n    history.push(\"/app/mail\");\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <div style={Middle}>\r\n        <Result\r\n          status=\"error\"\r\n          title=\"Submission Failed\"\r\n          subTitle=\"Please check and modify the following information before resubmitting.\"\r\n          extra={[<Button key=\"Back\" onClick={() => back()}>Back Again</Button>]}\r\n        >\r\n          <div className=\"desc\">\r\n            <Paragraph>\r\n              <Text\r\n                strong\r\n                style={{\r\n                  fontSize: 16,\r\n                }}\r\n              >\r\n                The content you submitted has the following error:\r\n              </Text>\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <CloseCircleOutlined className=\"site-result-demo-error-icon\" />{\" \"}\r\n              May be internet discount. <a href=\"#/\">Check Internet &gt;</a>\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <CloseCircleOutlined className=\"site-result-demo-error-icon\" />{\" \"}\r\n              May be you enter wrong mail address.{\" \"}\r\n              <a href=\"#/\">Check Email Address &gt;</a>\r\n            </Paragraph>\r\n          </div>\r\n        </Result>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst http = axios.create({\r\n   baseURL: 'https://pakistanvoterfront.herokuapp.com',\r\n//  baseURL: 'http://192.168.200.158:5000', //Release Base URL\r\n  headers: {'Content-Type': 'application/json'},\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n  async config => { config.headers = { }; return config; },\r\n  err => { return Promise.reject(err); },\r\n);\r\n\r\nexport default http;","import { React,useState,useEffect } from \"react\";\r\nimport http from \"../../apiConfig\";\r\nimport { Container, Card, Row } from \"react-bootstrap\";\r\nimport \"../Dashboard/dash.css\";\r\nexport default function Dashboard() {\r\n\r\n  const [data, setData] = useState({});\r\n  const [Candi, setCandiData] = useState({});\r\n  const [TotalCandiatdate, setTotalCandiatdate] = useState({});\r\n  useEffect(() => {\r\n    \r\n  const getData = () => {\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    const endpoint = \"/user/get-account\";\r\n    http.get(endpoint, { headers })\r\n      .then((response) => {\r\n        setData({\r\n          data: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\nlet approvedlist = [];\r\n  const getCandidatesData = () => {\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    const endpoint = \"/candidate/get_candidates\";\r\n    http.get(endpoint, { headers })\r\n      .then((response) => {\r\n        response.data.forEach(element => {\r\n          if(element.status === 'approved') {\r\n            approvedlist.push(element);\r\n          }\r\n        });\r\n        setCandiData(approvedlist);\r\n        setTotalCandiatdate( response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }; \r\n    getData();\r\n    getCandidatesData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <section>\r\n        <div\r\n          className=\"site-layout-background\"\r\n          style={{ padding: 24, minHeight: 360 }}\r\n        >\r\n            <Row>\r\n              <h3>DashBoard:</h3>\r\n            </Row>\r\n          <Row style={{textAlign:`center`}}>\r\n            <div className=\"col-lg-3 col-sm-6\">\r\n              <Card bg=\"success\" border=\"success\" text=\"white\" className=\"mb-2\">\r\n                <Card.Header>Total Members</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>{data.data ? data.data.length : 0 }</Card.Title>\r\n                  <Card.Text>Regsitered Memebers</Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>View More</Card.Footer>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-lg-3 col-sm-6\">\r\n              <Card bg=\"light\" border=\"light\" text=\"dark\" className=\"mb-2\">\r\n                <Card.Header>Total Candidates</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>{TotalCandiatdate ? TotalCandiatdate.length : 0 }</Card.Title>\r\n                  <Card.Text>Nominations For Vote</Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>View More</Card.Footer>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-lg-3 col-sm-6\">\r\n              <Card bg=\"info\" border=\"info\" text=\"light\" className=\"mb-2\">\r\n                <Card.Header>Approved Candidates</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>{Candi ? Candi.length : 0 }</Card.Title>\r\n                  <Card.Text>Approved Candidates For Vote</Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>View More</Card.Footer>\r\n              </Card>\r\n            </div>\r\n          </Row>\r\n        </div>\r\n      </section>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {  Button, Dropdown, Menu } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { Layout } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header(props) {\r\n  const menu = (\r\n    <Menu>\r\n      <Link to=\"/\">\r\n      <Menu.Item key=\"1\">admin@admin.com</Menu.Item>\r\n      <Menu.Item key=\"2\">logout</Menu.Item>\r\n      </Link>\r\n    </Menu>\r\n  );\r\n  return ( \r\n      <Layout.Header className=\"site-layout-background\">\r\n        <Row>\r\n          <Col><span style={{color: `green`,fontWeight:\"bold\"}}>Pakistan Voters Front</span></Col>\r\n          <Col className=\"text-end\" >\r\n            <Dropdown overlay={menu} placement=\"bottomCenter\">\r\n              <Button\r\n              className=\"rounded-circle ms-auto\"\r\n                icon={<UserOutlined />}\r\n              />\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n      </Layout.Header>   \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  DatabaseOutlined,\r\n  PieChartOutlined,\r\n  UserOutlined\r\n} from \"@ant-design/icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst App = () => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const location = useLocation();\r\n\r\n  const onCollapse = (collapsed) => setCollapsed(collapsed);\r\n  return (\r\n    <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n      <div className=\"logo\" />\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={[location.pathname]}\r\n      >\r\n        <Menu.Item key=\"/dashboard\" icon={<PieChartOutlined />}>\r\n          <span>Dashboard</span>\r\n          <Link to=\"/app\"></Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/member\" icon={<DatabaseOutlined />}>\r\n          <span>Member</span>\r\n          <Link to=\"/app/member\" />\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/candidate\" icon={<UserOutlined />}>\r\n          <span>Candidate</span>\r\n          <Link to=\"/app/candidate\" />\r\n        </Menu.Item>\r\n        {/* <Menu.Item key=\"/mail\" icon={<MailOutlined />}>\r\n          <span>Email</span>\r\n          <Link to=\"/app/mail\" />\r\n        </Menu.Item> */}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport { Layout } from 'antd';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Layout.Footer style={{ textAlign: 'center',color: `#212529`,fontWeight:`bold` }}>Copyright Reserved Pakistan Voters Front © 2022</Layout.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Header from \"./Header\";\r\nimport SideMenu from \"./SideMenu\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst LayoutWithRoute = ({ children }) => {\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <SideMenu />\r\n      <Layout className=\"site-layout\">\r\n        <Header {...children}/>\r\n        <Content style={{ margin: \"5px 5px\" }}>{children}</Content>\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LayoutWithRoute;\r\n","import React from \"react\";\nimport {  Route } from \"react-router-dom\";\nimport Layout from './Components/Layout';\nimport \"./App.css\";\n\nexport default function App({ component: Component }) {\n  return (\n    <Route\n      render={(routeProps) => (\n        <Layout>\n          <Component {...routeProps} />\n        </Layout>\n    )}\n  />\n  );\n}\n","import { React, useState, useEffect } from \"react\";\r\nimport http from \"../../apiConfig\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { Empty,Spin,Badge } from \"antd\";\r\nimport { Popconfirm, message } from \"antd\";\r\n//import Select from 'react-select';\r\n\r\nfunction Subject() {\r\n  const [loading, setloading] = useState(false);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [data, setData] = useState({});\r\n  const [seldata, setseldata] = useState({});\r\n  const { register, handleSubmit,reset } = useForm();\r\n  const onSubmit = (data) => {\r\n      if(data.email === '') data.email = seldata.email;\r\n      if(data.cnic === '') data.cnic = seldata.cnic;\r\n      if(data.name === '') data.name = seldata.name;\r\n      if(data.fname === '') data.fname = seldata.fname;\r\n      if(data.phone === '') data.phone = seldata.phone;\r\n      if(data.edu === '') data.edu = seldata.edu;\r\n      if(data.status === '') data.status = seldata.staus;\r\n      if(data.constituency === '') data.constituency = seldata.constituency;\r\n      if(data.count === '') data.count = seldata.count;\r\n      data.nominatedBy = seldata.nominatedBy;\r\n    //  data.Image = seldata.Image;\r\n      onUpdate(data);\r\n      reset();\r\n      setModalShow(false);\r\n  };\r\n\r\n  const onUpdate = (data) => {\r\n    console.log(data);\r\n      http.put('/candidate/update-candidates/' + seldata._id, data)\r\n      .then((res) => {\r\n        console.log('Candidate updated' + res)\r\n        getData();\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    setloading(true);\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    const endpoint = \"/candidate/get_candidates\";\r\n    http.get(endpoint, { headers })\r\n      .then((response) => {\r\n        setloading(false);\r\n        response.data?.sort((a, b) => (parseInt(a.count) > parseInt( b.count) ? -1 : 1)) \r\n        setData({\r\n          data: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  function EditModal(props) {\r\n    const center = {\r\n      justifyContent: `center !important`\r\n    }\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"EditModalTitle\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n          <Modal.Header style={center}>\r\n            <Modal.Title style={center} id=\"EditModal\" >Canidate Details<h5 style={{fontSize: 10,color: `red`}}>*Fill only those Fileds you want to update</h5></Modal.Title>\r\n          </Modal.Header>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col lg={6} md={6} sm={6} >\r\n             <Form.Group className=\"mb-3\" controlId=\"formName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control  placeholder={seldata.name} {...register(\"name\")} />\r\n            </Form.Group>             \r\n            <Form.Group className=\"mb-3\" controlId=\"formPhone\">\r\n              <Form.Label>Phone #</Form.Label>\r\n              <Form.Control  placeholder={seldata.phone} {...register(\"phone\")} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formEducation\">\r\n              <Form.Label>Education</Form.Label>\r\n              <Form.Control  placeholder={seldata.edu} {...register(\"edu\")} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formCount\">\r\n              <Form.Label>Vote Count</Form.Label>\r\n              <Form.Control placeholder={seldata.count} readOnly {...register(\"count\")} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formCount\">\r\n              <Form.Label>Constituency</Form.Label>\r\n              <Form.Control placeholder={seldata.constituency} {...register(\"constituency\")} />\r\n            </Form.Group>\r\n              </Col>\r\n              <Col lg={6} md={6} sm={6} >\r\n              <Form.Group className=\"mb-3\" controlId=\"formFatherName\">\r\n              <Form.Label>Father Name</Form.Label>\r\n              <Form.Control  placeholder={seldata.fname} {...register(\"fname\")} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control  placeholder={seldata.email} {...register(\"email\")} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formCnic\">\r\n              <Form.Label>Cnic without dash</Form.Label>\r\n              <Form.Control  placeholder={seldata.cnic} {...register(\"cnic\")} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicSelect\">\r\n        <Form.Label>Candidate Status</Form.Label> <Badge  style={{ backgroundColor: seldata.status === 'approved' ?  '#008000': 'red'}} count={seldata.status ? seldata.status.charAt(0).toUpperCase() + seldata.status.slice(1) : ''} />\r\n        <Form.Control as=\"select\" placeholder={seldata.status} {...register(\"status\")} >\r\n        <option value=\"\">Change Status</option>\r\n          <option value=\"approved\">Approved</option>\r\n          <option value=\"pending\">Pending</option>\r\n          <option value=\"rejected\">Rejected</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer style={{justifyContent : `center`}}>\r\n            <Button style={{background:`#008000`,border: `#008000`}} type=\"submit\">Update</Button>\r\n            <Button style={{background:`#008000`,border: `#008000`}} onClick={props.onHide}>Close</Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n  function confirm(e) {\r\n    http\r\n      .delete(\"/candidate/delete-candidates/\" + e._id)\r\n      .then((res) => {\r\n        message.success(\"Delete Successfulyy!!!\");\r\n        getData();\r\n      })\r\n      .catch((error) => {\r\n        message.error(error.message);\r\n        console.log(error);\r\n      });\r\n    \r\n  }\r\n\r\n  function cancel(e) {\r\n    message.error(\"Candiate not Deleted!\");\r\n  }\r\n\r\n  const TStyle = {\r\n    textAlign: `center`, \r\n    verticalAlign: `middle`,\r\n    cursor:`pointer`\r\n    }\r\n  return (\r\n    <Container fluid>\r\n       <Spin spinning={loading}  tip=\"Loading Subjects...\" size=\"large\">\r\n      <section>\r\n        <div\r\n          className=\"site-layout-background\"\r\n          style={{ padding: 24, minHeight: 360 }}\r\n        >\r\n          <section className=\"mb-2\">\r\n            <Row>\r\n              <h3>Candidates:</h3>\r\n            </Row>\r\n          </section>\r\n          <section>\r\n            {data.data ? (\r\n              <Table\r\n                style={TStyle}\r\n                striped\r\n                table-success=\"true\"\r\n                bordered\r\n                hover\r\n                size=\"sm\"\r\n                responsive\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Father Name</th>\r\n                    <th>CNIC</th>\r\n                    <th>Vote</th>\r\n                    <th>Phone</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.data.map(function (item, i) {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{i+1}</td>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.fname}</td>\r\n                        <td>{item.cnic}</td>\r\n                        <td>{item.count}</td>\r\n                        <td>{item.phone}</td>\r\n                        <td>\r\n                          <Button\r\n                            variant=\"outline-success\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              setModalShow(true);\r\n                              setseldata(item);\r\n                            }}\r\n                          >\r\n                            Edit\r\n                          </Button>\r\n                        </td>\r\n                        <td>\r\n                          <Popconfirm\r\n                            title=\"Are you sure to delete this Candidate?\"\r\n                            onConfirm={() => confirm(item)}\r\n                            onCancel={cancel}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                          >\r\n                            <Button variant=\"outline-danger\" size=\"sm\">\r\n                              Delete\r\n                            </Button>\r\n                          </Popconfirm>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n                <EditModal\r\n                  show={modalShow}\r\n                  onHide={() => setModalShow(false)}\r\n                />\r\n              </Table>\r\n            ) : (\r\n              <Empty />\r\n            )}\r\n          </section>\r\n        </div>\r\n      </section>\r\n      </Spin>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Subject;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport http from \"../../apiConfig\";\r\n//import { connect} from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { LikeTwoTone, DislikeTwoTone } from \"@ant-design/icons\";\r\nimport { Empty, Spin } from \"antd\";\r\nimport { Popconfirm, message, Badge } from \"antd\";\r\n//import { SetEmail } from \"../../Store/action/action\";\r\n//import MaterialTable from \"material-table\";\r\nfunction Account() {\r\n  // const dispatch = useDispatch();\r\n  const [loading, setloading] = useState(false);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [seldata, setseldata] = useState({});\r\n  const [finaldata, setfinaldata] = useState();\r\n  const { control, register, handleSubmit, reset } = useForm();\r\n  const onSubmit = (data) => {\r\n    if (data.email === \"\") data.email = seldata.email;\r\n    if (data.password === \"\") data.password = seldata.password;\r\n    setModalShow(false);\r\n    onUpdate(data);\r\n    reset();\r\n  };\r\n\r\n  const onUpdate = (data) => {\r\n    http\r\n      .put(\"/user/update-account/\" + seldata._id, data)\r\n      .then((res) => {\r\n        console.log(\"Account has been updated\" + res);\r\n        console.log(register);\r\n        getData();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    setloading(true);\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    const endpoint = \"/user/get-account\";\r\n    http\r\n      .get(endpoint, { headers })\r\n      .then((response) => {\r\n        setloading(false);\r\n        setfinaldata(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  function EditModal(props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"EditModalTitle\"\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered\r\n      >\r\n        <Badge.Ribbon\r\n          color=\"#008000\"\r\n          text={seldata.email + \":\" + seldata.password}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title id=\"EditModal\">\r\n              Update Account{\" \"}\r\n              <h5 style={{ fontSize: 10, color: `red` }}>\r\n                *Fill only those Fileds you want to update\r\n              </h5>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n        </Badge.Ribbon>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col lg={12} sm={12} className=\"mb-3\">\r\n                <Form.Control\r\n                  placeholder={seldata.email}\r\n                  type=\"text\"\r\n                  {...register(\"email\")}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={12} sm={12} className=\"mb-3\">\r\n                <Form.Control\r\n                  placeholder={seldata.password}\r\n                  type=\"text\"\r\n                  {...register(\"password\")}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer style={{ justifyContent: `center` }}>\r\n            <Button\r\n              style={{ background: `#008000`, border: `#008000` }}\r\n              type=\"submit\"\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              style={{ background: `#008000`, border: `#008000` }}\r\n              onClick={props.onHide}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  function confirm(e) {\r\n    http\r\n      .delete(\"/user/delete-account/\" + e._id)\r\n      .then((res) => {\r\n        getData();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    message.success(\"Delete Successfulyy!!!\");\r\n  }\r\n\r\n  function cancel(e) {\r\n    console.log(e);\r\n    message.error(\"Click on No\");\r\n  }\r\n\r\n  const TStyle = {\r\n    textAlign: `center`,\r\n    verticalAlign: `middle`,\r\n    cursor: `pointer`,\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Spin spinning={loading} tip=\"Loading Accounts...\" size=\"large\">\r\n        <section>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            <section className=\"mb-2\">\r\n              <Row>\r\n                <h3>Members:</h3>\r\n              </Row>\r\n            </section>\r\n            <section>\r\n              {finaldata ? (\r\n                <Table style={TStyle} striped table-success=\"true\" bordered hover size=\"sm\" responsive >\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Account</th>\r\n                      <th>Password</th>\r\n                      <th>Voted</th>\r\n                      <th>Constituency</th>\r\n                      <th>Edit</th>\r\n                      <th>Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {finaldata.map(function (item, i) {\r\n                      return (\r\n                        <tr key={i}>\r\n                          <td>{i + 1}</td>\r\n                          <td>{item.email}</td>\r\n                          <td>{item.password}</td>\r\n                          <td>{item.constituency} </td>\r\n                          <td>\r\n                            {item.voteFlag === true ? (\r\n                              <LikeTwoTone\r\n                                twoToneColor=\"green\"\r\n                                style={{ fontSize: 20 }}\r\n                              />\r\n                            ) : (\r\n                              <DislikeTwoTone\r\n                                twoToneColor=\"red\"\r\n                                style={{ fontSize: 20 }}\r\n                              />\r\n                            )}\r\n                          </td>\r\n                          <td>\r\n                            <Button\r\n                              variant=\"outline-success\"\r\n                              size=\"sm\"\r\n                              onClick={() => {\r\n                                setModalShow(true);\r\n                                setseldata(item);\r\n                              }}\r\n                            >\r\n                              Edit\r\n                            </Button>\r\n                          </td>\r\n                          <td>\r\n                            <Popconfirm\r\n                              title=\"Are you sure to delete this Account?\"\r\n                              onConfirm={() => confirm(item)}\r\n                              onCancel={cancel}\r\n                              okText=\"Yes\"\r\n                              cancelText=\"No\"\r\n                            >\r\n                              <Button variant=\"outline-danger\" size=\"sm\">\r\n                                Delete\r\n                              </Button>\r\n                            </Popconfirm>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                  <EditModal\r\n                    data={seldata}\r\n                    show={modalShow}\r\n                    control={control}\r\n                    onHide={() => setModalShow(false)}\r\n                  />\r\n                </Table>\r\n              ) : (\r\n                <Empty />\r\n              )}\r\n            </section>\r\n          </div>\r\n        </section>\r\n      </Spin>\r\n    </Container>\r\n  );\r\n}\r\nexport default Account;\r\n","\r\nconst UserData = { } ;\r\nconst AllSubjects = { };\r\n  // All Reducers:\r\n\r\n  function SetUser(state = UserData, action) {\r\n    if (action.type === 'UserSet') {\r\n        return { ...state, SelectedUser: action.payload}\r\n      }\r\n      else return state;\r\n  }\r\n\r\n  function Subjects(state = AllSubjects, action) {\r\n    if (action.type === 'AllSubjects') {\r\n        return { ...state, AllSubjects: action.payload}\r\n      }\r\n      else return state;\r\n  }\r\n  export {SetUser,Subjects};","import { createStore,combineReducers} from \"redux\";\r\nimport {SetUser,Subjects} from \"../reducers/reducer.js\";\r\n\r\nconst reducers = combineReducers({ SetUser,Subjects })\r\n\r\nconst store = createStore(reducers);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Components/Login/login\";\nimport SuccessPage from \"./Components/MailTemplate/success\";\nimport ErrorPage from \"./Components/MailTemplate/error\";\nimport dashboard from \"./Components/Dashboard/dashboard\";\nimport RouteApp from \"./App\";\nimport \"antd/dist/antd.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import mail from \"./Components/MailTemplate/editor\";\nimport candidate from \"./Components/Candidate/candidate\";\nimport member from \"./Components/Member/member\";\nimport nomatch from \"./Components/MailTemplate/nomatch\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n  <BrowserRouter>\n    <Switch>\n      <Route exact path={\"/\"} component={Login} />\n      <Route\n        path={\"/app\"}\n        render={({ match: { url } }) => (\n          <Switch>\n            <RouteApp exact path={`${url}/`} component={dashboard} />\n            <RouteApp exact path={`${url}/member`} component={member} />\n            <RouteApp exact path={`${url}/candidate`} component={candidate} />\n          </Switch>\n        )}\n      />\n       <Route exact path={\"/success\"} component={SuccessPage} />\n       <Route exact path={\"/error\"} component={ErrorPage} />\n       <Route exact path={\"*\"} component={nomatch} />\n    </Switch>\n  </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","import { React } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"../Login/login.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import http from \"../apiConfig\";\r\nimport logo from \"../../Assets/rs.png\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function Login() {\r\n\r\n\r\n  // const Notifymsg = (msg) => {\r\n  //   message.success(msg);\r\n  // };\r\n  // const Notifyerrormsg = (msg) => {\r\n  //   message.error(msg);\r\n  // };\r\n\r\n  // const login_back = (token) => {\r\n  //   let authen = { token: token };\r\n  //   http\r\n  //     .post(\"/authentication\", authen)\r\n  //     .then((res) => {\r\n  //       let _token = sessionStorage.getItem(\"access_token\");\r\n  //       let data = res.data;\r\n  //       let b_token = data.token.token;\r\n  //       let msg = data.msg;\r\n  //       if (_token === b_token) {\r\n  //         Notifymsg(msg);\r\n  //         history.push(\"/app\");\r\n  //       } else {\r\n  //         sessionStorage.removeItem(\"access_token\");\r\n  //         Notifyerrormsg(\"Invalid User!!\");\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    if (data.email === \"admin@admin.com\" && data.password === \"admin\") {\r\n      message.success(\"Login Successfully!!!\");\r\n      history.push(\"/app\");\r\n    } else {\r\n      message.error(\"Invalid Email & Password!!!\");\r\n    }\r\n  };\r\n  const errormsg = {\r\n    fontSize: `11px`,\r\n    color: `red`,\r\n    marginLeft: `10px`,\r\n    fontWeight: `700`,\r\n  };\r\n  return (\r\n    <section className=\"ftco-section\">\r\n      <Container fluid>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6 text-center mb-5\">\r\n          <img src={logo} alt=\"Logo\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6 col-lg-4\">\r\n            <div className=\"login-wrap p-0\">\r\n              <h3 className=\"mb-4 text-center\">Have an account?</h3>\r\n              <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    style={{ borderRadius: `14px` }}\r\n                    {...register(\"email\", { required: true })}\r\n                  />\r\n                  <Form.Text\r\n                    className=\"text-muted\"\r\n                    style={{ marginLeft: `10px` }}\r\n                  >\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                  {errors.email && (\r\n                    <span style={errormsg}>This field is required</span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    style={{ borderRadius: `14px` }}\r\n                    {...register(\"password\", { required: true })}\r\n                  />{\" \"}\r\n                  {errors.password && (\r\n                    <span style={errormsg}>This field is required</span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Button\r\n                    variant=\"success\"\r\n                    className=\"form-control btn btn-success submit px-3\"\r\n                    type=\"submit\"\r\n                    style={{ borderRadius: `10px` }}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Form.Group>\r\n\r\n               \r\n                {/* <Form.Group className=\"mb-3\" controlId=\"formRemem\">\r\n                  <Row>\r\n                    <Col>\r\n                      {\" \"}\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        {...register(\"rme\")}\r\n                        label=\"Remember Me\"\r\n                      />\r\n                    </Col>\r\n                    <Col style={{ textAlign: \"right\" }}>\r\n                      {\" \"}\r\n                      <a href=\"/#\">Forgot Password</a>\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Group> */}\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n","import { React } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Result, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SuccessPage() {\r\n  const history = useHistory();\r\n  const Middle = {\r\n    padding: `13em 0`,\r\n    background: `aliceblue`\r\n  };\r\n\r\n  const back = () => {\r\n    history.push(\"/app/mail\");\r\n  };\r\n  const logout = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <div style={Middle}>\r\n        <Result\r\n          status=\"success\"\r\n          title=\"Successfully Send!\"\r\n          subTitle=\"Great Sol.\"\r\n          extra={[\r\n            <Button type=\"primary\" key=\"console\" onClick={() => logout()}>\r\n              Go Logout\r\n            </Button>,\r\n            <Button key=\"Back\" onClick={() => back()}>\r\n              Back Again\r\n            </Button>,\r\n          ]}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import { React } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Result, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NoMatch() {\r\n  const history = useHistory();\r\n  const Middle = {\r\n    padding: `6em 0`,\r\n    background: `aliceblue`\r\n  };\r\n\r\n  const back = () => {\r\n    history.push(\"/app/mail\");\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <div style={Middle}>\r\n      <Result\r\n    status=\"404\"\r\n    title=\"404\"\r\n    subTitle=\"Sorry, the page you visited does not exist.\"\r\n    extra={<Button type=\"primary\" onClick={back}>Back Home</Button>} />\r\n\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}